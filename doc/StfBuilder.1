.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "StfBuilder" "1" "September 2018" "" ""
.hy
.SH NAME
.PP
StfBuilder \[en] aggregate readout data into Sub Time Frames (STF)
.SH DESCRIPTION
.PP
\f[B]StfBuilder\f[] (StfBuilder) is the O2 device responsible for
aggregating readout data into SubTimeFrame objects on the FLPs.
On the input channel, the StfBuilder receives HBFrame data from the
readout.
On the output, the StfBuilder supports the DPL or the native data
distribution chain forwarding (to SubTimeFrameSender).
Optionally, the StfBuilder can be used to write STFs to files, before
they are sent out.
.SH OPTIONS
.SS General options
.TP
.B \f[B]\-h\f[], \f[B]\[en]help\f[]
Print help
.RS
.RE
.TP
.B \f[B]\-v\f[] \f[B]\[en]version\f[]
Print version
.RS
.RE
.TP
.B \f[B]\[en]severity\f[] level
Log severity level: trace, debug, info, state, warn, error, fatal,
nolog.
The default value of this parameter is `\f[I]debug\f[]'.
.RS
.RE
.TP
.B \f[B]\[en]severity\-infologger\f[] arg (=warning)
Minimum severity to send to InfoLoggerD.
.RS
.RE
.SS FairMQ device options
.TP
.B \f[B]\[en]id\f[] arg
Device ID (\f[B]required\f[]).
.RS
.RE
.TP
.B \f[B]\[en]io\-threads\f[] n
Number of I/O threads.
The default value of this parameter is `\f[I]1\f[]'.
.RS
.RE
.TP
.B \f[B]\[en]transport\f[] arg (=zeromq)
Transport (`zeromq'/`nanomsg'/`shmem').
The default value of this parameter is `\f[I]zeromq\f[]'.
.RS
.RE
.TP
.B \f[B]\[en]network\-interface\f[] arg
Network interface to bind on (e.g.\ eth0, ib0\&..., default will try to
detect the interface of the default route).
The default value of this parameter is `\f[I]default\f[]'.
.RS
.RE
.TP
.B \f[B]\[en]session\f[] arg
Session name.
All FairMQ devices in the chain must use the same session parameter.
The default value of this parameter is `\f[I]default\f[]'.
.RS
.RE
.SS FairMQ channel parser options
.TP
.B \f[B]\[en]mq\-config\f[] path
JSON input as file.
.RS
.RE
.TP
.B \f[B]\[en]channel\-config\f[] conf
Configuration of single or multiple channel(s) by comma separated
\f[I]key=value\f[] list.
.RS
.RE
.SS StfBuilder options
.TP
.B \f[B]\[en]input\-channel\-name\f[] name
Name of the input readout channel (\f[B]required\f[]).
.RS
.RE
.TP
.B \f[B]\[en]stand\-alone\f[]
Standalone operation.
SubTimeFrames will not be forwarded to other processes.
.RS
.RE
.TP
.B \f[B]\[en]max\-buffered\-stfs\f[] num
Maximum number of buffered SubTimeFrames before starting to drop data.
Unlimited: \-1.
The default value of this parameter is `\f[I]\-1\f[]'.
.RS
.RE
.TP
.B \f[B]\[en]output\-channel\-name\f[] name
Name of the output channel for non\-DPL deployments (\f[B]required\f[]).
.RS
.RE
.SS StfBuilder DPL options
.TP
.B \f[B]\[en]dpl\-channel\-name\f[] name
Enable DPL workflow: Specify name of the DPL output channel.
NOTE: Channel specification is given using
`\f[I]\[en]channel\-config\f[]' option.
.RS
.RE
.SS SubTimeFrameBuilder data source
.TP
.B \f[B]\[en]detector\f[] name
Specifies the detector string for SubTimeFrame building.
Allowed are: ACO, CPV, CTP, EMC, FT0, FV0, FDD, HMP, ITS, MCH, MFT, MID,
PHS, TOF, TPC, TRD, ZDC.
.RS
.RE
.TP
.B \f[B]\[en]detector\-rdh\f[] ver
Specifies the version of RDH.
Supported versions of the RDH are: 3, 4, 5, 6.
.RS
.RE
.TP
.B \f[B]\[en]detector\-subspec\f[] method
Specifies the which RDH fields are used for O2 SubSpecification field:
Allowed methods are: `cru_linkid' or `feeid'.
.RS
.RE
.SS Options controlling SubTimeFrame building
.TP
.B \f[B]\[en]rdh\-data\-check\f[] arg (=off)
Enable extensive RDH verification.
Permitted values: off, print, drop.
.RS
.RE
.TP
.B \f[B]\[en]rdh\-filter\-empty\-trigger\f[]
Filter out empty HBFrames sent in triggered mode.
.RS
.RE
.SS (Sub)TimeFrame file sink options
.TP
.B \f[B]\[en]data\-sink\-enable\f[]
Enable writing of (Sub)TimeFrames to file.
.RS
.RE
.TP
.B \f[B]\[en]data\-sink\-dir\f[] dir
Specifies a root directory where (Sub)TimeFrames are to be written.
Note: A new directory will be created here for all files of the current
run.
.RS
.RE
.TP
.B \f[B]\[en]data\-sink\-file\-name\f[] pattern
Specifies file name pattern: %n \- file index, %r \- run number, %i \-
starting (S)TF id, %D \- date, %T \- time.
The default value of this parameter is `run%r_tf%i.tf'.
.RS
.RE
.TP
.B \f[B]\[en]data\-sink\-max\-stfs\-per\-file\f[] num
Limit the number of (Sub)TimeFrames per file.s The default value of this
parameter is `\f[I]1\f[]'.
.RS
.RE
.TP
.B \f[B]\[en]data\-sink\-max\-file\-size\f[] arg (=4294967296)
Limit the target size for (Sub)TimeFrame files.' Note: Actual file size
might exceed the limit since the (Sub)TimeFrames are written as a whole.
.RS
.RE
.TP
.B \f[B]\[en]data\-sink\-sidecar\f[]
Write a sidecar file for each (Sub)TimeFrame file containing information
about data blocks written in the data file.
Note: Useful for debugging.
\f[I]Warning: Format of sidecar files is not stable. This option is for
debugging only.\f[]
.RS
.RE
.SS (Sub)TimeFrame file source options
.TP
.B \f[B]\[en]data\-source\-enable\f[]
Enable reading of (Sub)TimeFrames from files.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-dir\f[] arg
Specifies the source directory where (Sub)TimeFrame files are located.
NOTE: Only (Sub)TimeFrame data files are allowed in this directory.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-rate\f[] arg (=1.0)
Rate of injecting new (Sub)TimeFrames (approximate).
Use \-1 to inject as fast as possible.
(float)
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-preread\f[] arg (=1)
Number of pre\-read (Sub)TimeFrames prepared for sending.
Must be greater or equal to 1.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-repeat\f[]
If enabled, repeatedly inject (Sub)TimeFrames into the chain.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-regionsize\f[]
Size of the memory region for (Sub)TimeFrames data in MiB.
Note: make sure the region can fit several (Sub)TimeFrames to avoid
deadlocks.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-region\-shmid\f[]
Optional shm id for reusing existing TimeFrame regions.
(default will create a new region)
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-headersize\f[] arg (=512)
Size of the memory region for (Sub)TimeFrames O2 headers in MiB.
Note: make sure the region can fit several (Sub)TimeFrames to avoid
deadlocks.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-header\-shmid\f[]
Optional shm id for reusing existing TimeFrame header region.
(default will create a new region)
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-file\-list\f[] arg
File name which contains the list of files at remote location, e.g.\ a
list of files on EOS, or a remote server.
Note: copy\-cmd parameter must be provided.
.RS
.RE
.TP
.B \f[B]\[en]data\-source\-copy\-cmd\f[] arg
Copy command to be used to fetch remote files.
NOTE: Placeholders for source and destination file name (?src and ?dst)
must be specified.
E.g.
\[lq]scp user\@my\-server:?src ?dst\[rq].
Source placeholder will be substituted with files provided by the
file\-list option.
.RS
.RE
.SH NOTES
.PP
To enable zero\-copy operation using shared memory, make sure the
parameter \f[B]\[en]transport\f[] is set to `\f[I]shmem\f[]' and that
all input and output channels are of `\f[I]shmem\f[]' type as well.
Also, consider setting the \f[B]\[en]io\-threads\f[] parameter to a
value equal to, or lower than, the number of CPU cores on your system.
.SH AUTHORS
Gvozden Nešković <neskovic@compeng.uni-frankfurt.de>.
